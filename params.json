{"name":"Jcards","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"[Thomas Amaro]: http://www.thomasamaro.com \"Thomas Amaro's Official Site\"\r\n[Brian Jeppesen]: http://www.thomasamaro.com \"Thomas Amaro's Official Site\"\r\n\r\n# jCards Framework #\r\n\r\n*jCards* enumerates a collection of jQuery elements, or Cards as we'll call them here, assigning to each a class that indicates whether it belongs on the left side, right side, or on a line by itself. Various options can be set to customize the way that this happens.\r\n\r\n## Detailed Description ##\r\n\r\nWhen *jCards* is called on a wrapper element, it enumerates all elements that have the ```.jcard``` class. To each, it assigns a class describing how this card should appear. This can be ```.card-left```, ```.card-right```, or ```.card-full```.\r\n\r\n### How the classes are assigned ###\r\n\r\nThere are several rules that *jCards* uses to determine what class to give to a card.\r\n\r\n1. In general, *jCards* alternates between setting cards as ```.card-left``` and ```.card-right```.\r\n\r\n  ```html\r\n  <div id=\"wrapper\">\r\n      <article class=\"jcard card-left\"><p>Article 1</p></article>\r\n      <article class=\"jcard card-right\"><p>Article 2</p></article>\r\n      <article class=\"jcard card-left\"><p>Article 3</p></article>\r\n      <article class=\"jcard card-right\"><p>Article 4</p></article>\r\n  </div>\r\n  ```\r\n\r\n2. Any card that has the ```.tacked``` class is set as ```.card-full``` instead.\r\n\r\n  ```html\r\n  <div id=\"wrapper\">\r\n      <article class=\"jcard tacked card-full\"><p>Article 1</p></article> <!-- has .card-full because it is a .tacked card -->\r\n      <article class=\"jcard card-left\"><p>Article 2</p></article>\r\n      <article class=\"jcard card-right\"><p>Article 3</p></article>\r\n  </div>\r\n  ```\r\n\r\n3. If the last card before a ```.tacked``` card or the last card on the page would normally be set as ```.card-left```, *jCards* sets it to ```.card-full``` to fill the entire row.\r\n\r\n  ```html\r\n  <div id=\"wrapper\">\r\n      <article class=\"jcard card-full\"><p>Article 1</p></article> <!-- has .card-full because it is the last before a tacked card -->\r\n      <article class=\"jcard tacked card-full\"><p>Article 2</p></article>\r\n      <article class=\"jcard card-full\"><p>Article 3</p></article> <!-- has .card-full because it is the last card -->\r\n  </div>\r\n  ```\r\n\r\nMuch of the above behavior can be changed by passing *jCards* special options.\r\n\r\n## Why Not Use PHP? ##\r\n\r\nThis library is meant to be used with pages that load elements into the page through AJAX. For this reason, it does the processing on the client-side.\r\n\r\n## Requirements ##\r\n\r\n* jQuery\r\n\r\n## Developer ##\r\n\r\n* [Brian Jeppesen][]\r\n\r\n## Installation ##\r\n\r\n1. Download the latest *jCards* **js** file above.\r\n2. Upload it to your server.\r\n3. Link to it in your ```<head>``` like this:\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"path-to-folder/jCards.1.0.min.js\"></script>\r\n```\r\n\r\n## The Basics ##\r\n\r\nThe simplest setup for *jCards* requires only the following three lines:\r\n\r\n```javascript\r\njQuery(document).ready(function(){\r\n  jQuery(\"#wrapper\").drawCards();\r\n});\r\n```\r\n\r\n## Special Options ##\r\n\r\nDocumentation coming soon.\r\n\r\n## Handling AJAX ##\r\n\r\nWhenever new items are loaded into the page using AJAX, call the following function:\r\n\r\n```javascript\r\njQuery(document).ready(function(){\r\n  jQuery(\"#wrapper\").redrawCards();\r\n});\r\n```\r\n\r\nThis schedules a redraw, allowing new posts to be added with their alignment assigned. Additionally, any previously loaded posts that have been made full due to being the final posts will be recalculated.\r\n\r\n## License ##\r\n\r\n*jCards* is licensed under the terms of the MIT License, see the included MIT-LICENSE file.\r\n\r\n\r\n&copy; [Brian Jeppesen][]","google":"","tagline":"jCards enumerates a collection of jQuery elements, or Cards as we'll call them here, assigning to each a class that indicates whether it belongs on the left side, right side, or on a line by itself. Various options can be set to customize the way that this happens."}